// Generated by CoffeeScript 1.8.0
(function() {
  var make_name_input, shuffle;

  window.setup_players = function() {
    var _, _i;
    for (_ = _i = 1; _i <= 4; _ = ++_i) {
      add_player();
    }
    return $('#step-2').hide();
  };

  window.add_player = function() {
    if (window.n_players == null) {
      window.n_players = 0;
    }
    window.n_players += 1;
    return $('#player-inputs').append(make_name_input(window.n_players));
  };

  window.remove_player = function(n) {
    if ($('#player-inputs .player').length <= 1) {
      return;
    }
    $("#player-inputs #player-" + n).remove();
    return $('#player-inputs .player label').each(function(index) {
      return this.innerHTML = "Player " + (index + 1);
    });
  };

  make_name_input = function(n) {
    var player_id;
    player_id = $('#player-inputs .player').length + 1;
    return "<div class = 'form-group player' id = 'player-" + n + "'>\n    <label class = 'col-sm-2 control-label' for = 'name-" + n + "'>Player " + player_id + "</label>\n    <div class = 'col-sm-10'>\n        <div class = 'input-group'>\n            <input class = 'form-control player-name-input' type = 'name' id = 'name-" + n + "' />\n            <span class = 'input-group-btn'>\n                <a class = 'btn btn-default' onclick = 'remove_player(" + n + ")'>&times;</a>\n            </span>\n        </div>\n    </div>\n</div>";
  };

  window.tocard = function(n) {
    return $('.card').each(function(index) {
      if (index === n - 1) {
        return $(this).show();
      } else {
        return $(this).hide();
      }
    });
  };

  window.check_names = function() {
    var t;
    t = false;
    $('.player-name-input').each(function(index) {
      console.log($(this).val());
      if ($(this).val() !== '') {
        return t = true;
      }
    });
    return t;
  };

  window.generate_characters = function(callback) {
    var xhr;
    if (window.characters === !null && window.characters.length > 0) {
      callback();
      return;
    }
    xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function(event) {
      if (xhr.readyState === 4) {
        window.characters = shuffle(xhr.responseText.split('\n'));
        return callback();
      }
    };
    xhr.open('GET', 'characters.txt', true);
    return xhr.send(null);
  };

  window.choose_characters = function() {
    return window.generate_characters(function() {
      $('#character-list').html('');
      return $('.player-name-input').each(function() {
        var name;
        name = $(this).val();
        if (name === '') {
          return;
        }
        return $('#character-list').append("<div class = 'col-md-4 character-box'>\n    <h3>" + name + "</h3>\n    <div class = 'character-description'>" + (window.characters.pop()) + "</div>\n</div>");
      });
    });
  };

  shuffle = function(array) {
    var index, rIndex, _ref;
    index = array.length;
    while (0 !== index) {
      rIndex = Math.floor(Math.random() * index);
      index -= 1;
      _ref = [array[rIndex], array[index]], array[index] = _ref[0], array[rIndex] = _ref[1];
    }
    return array;
  };

}).call(this);
